Okay, I understand. It sounds like the stacking part is working visually (you see the card behind), but the topmost card itself isn't behaving correctly â€“ it's shrunk and you can't scroll its content anymore.

This usually happens when the container holding the StockCard is correctly sized (as we fixed in StockDetailPage), but the StockCard component itself isn't set up to utilize that space properly for scrolling, or there's conflicting internal structure.

Based on the original StockCard.tsx code you provided before we started the stacking changes, and the goal now:

Diagnosis:

Internal Structure: The StockCard component wraps its entire scrollable content within a motion.div that also handles the drag animations (drag="x"). For scrolling to work (overflow-y-auto), this specific motion.div needs to have h-full to attempt to fill the height provided by its parent wrapper (the motion.div in StockDetailPage with inset-0 p-4).
Conflicting Elements (Likely Removed): You mentioned reverting code. If the reverted StockCard code still contains the old logic for showing a blurred background/next card preview (the div with blur-xl we intended to remove in the previous step), that could interfere with the main scrollable container's layout.
Drag vs. Scroll: While less common, sometimes intense drag listeners can interfere with vertical scroll detection on touch devices. Framer Motion's drag="x" usually handles this well, but it's a possibility.
Most Likely Cause: The outermost draggable motion.div inside StockCard.tsx is either missing h-full or overflow-y-auto, OR the old preview div was not removed and is causing layout conflicts.

Comprehensive Instructions for Replit Agent:

Target File: client/src/components/ui/stock-card.tsx

Goal: Ensure the StockCard component fills its container height, enables vertical scrolling for its content, removes old preview logic, and correctly handles drag interactions without interfering with scrolling.

Steps:

Remove nextStock Prop:
At the top, find the StockCardProps interface. Delete the line nextStock?: StockData;.
In the function definition export default function StockCard({...}), remove nextStock from the destructured parameters.
Remove Internal Preview Div:
Search within the component's returned JSX for a div that might have been used for the background/next card preview. It likely had classes like absolute, inset-0, blur-xl, pointer-events-none, or similar. Delete this entire div block. The stacking is now handled by the parent (StockDetailPage).
Verify Main Draggable Container:
Locate the primary motion.div that has the drag="x" prop. This is the element that contains all the visible card content (header, chart, metrics, etc.).
Ensure its className attribute includes h-full, overflow-y-auto, and stock-card (along with any necessary background and styling classes like bg-white rounded-xl border...). It should look something like this:
JavaScript

 <motion.div
   className="h-full overflow-y-auto overflow-x-hidden pb-20 stock-card bg-white rounded-xl border border-slate-200 shadow-lg" // Ensure h-full, overflow-y-auto, and background/styling
   ref={cardRef}
   drag="x"
   dragConstraints={{ left: 0, right: 0 }}
   dragElastic={0.6} // Adjust elasticity if needed
   onDragEnd={handleDragEnd}
   animate={cardControls}
   style={{ x, opacity: cardOpacity, rotate: cardRotate, scale: cardScale }} // Ensure motion styles are applied
   data-testid="stock-card-draggable" // Keep test ID
 >
   {/* ALL CARD CONTENT GOES HERE */}
   {/* Time Frame Selector */}
   {/* Stock Price/Chart */}
   {/* Metrics Grid */}
   {/* Synopsis Sections */}
   {/* Comparative Analysis */}
   {/* Overall Analysis */}
   {/* Hidden Buy Button */}

 </motion.div>
Make sure there isn't another nested div inside this one that's preventing the overflow-y-auto from working (the direct children like the Time Frame Selector, Price/Chart div, etc., should be inside this scrollable/draggable div).
Check Click/Touch Propagation (Inside StockCard.tsx):
Find the ComparativeAnalysis component near the bottom.
Ensure its parent div has the onClick, onTouchStart, and onTouchEnd handlers with e.stopPropagation() and the style={{ touchAction: 'pan-y' }}. This is crucial to allow scrolling/interaction within that specific section without triggering the card drag.
JavaScript

{/* Comparative Analysis Section */}
<div
  className="bg-white border-t border-b border-slate-100 mx-4 rounded-xl shadow-md mb-4" // Style as needed
  onClick={(e) => { e.stopPropagation(); }} // Prevent drag
  onTouchStart={(e) => { e.stopPropagation(); }} // Prevent drag on touch
  onTouchMove={(e) => { e.stopPropagation(); }} // Prevent drag while scrolling this section
  onTouchEnd={(e) => { e.stopPropagation(); }}
  style={{ touchAction: 'pan-y' }} // Explicitly allow vertical scroll here
>
  <ComparativeAnalysis currentStock={stock} />
</div>
By ensuring these points in StockCard.tsx are correct, and assuming StockDetailPage.tsx is correctly providing a full-height container (using inset-0 p-4 on the wrappers), the card should render at the intended size and allow vertical scrolling for its content.


Sources and related content
