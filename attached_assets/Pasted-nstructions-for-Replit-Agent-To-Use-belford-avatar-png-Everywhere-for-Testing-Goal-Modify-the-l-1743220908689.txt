nstructions for Replit Agent (To Use belford-avatar.png Everywhere for Testing):

Goal: Modify the leaderboard page and competition tracker widget to temporarily use the imported belford-avatar.png for all user avatars, ignoring the avatar field from the data source.

Instruction Set 1: Update leaderboard-page.tsx

File: client/src/pages/leaderboard-page.tsx
Import Image: Add this import statement near the top of the file (adjust the path if needed based on your folder structure, check ModernUserWelcome.tsx [source: 2223] for the correct relative path):
TypeScript

import belfordAvatar from '../assets/belford-avatar.png'; 
Modify Podium Image Rendering: Find the <img> tags inside the "Podium for top 3" section [source: 4477]. Change the src attribute for all three positions (1st, 2nd, 3rd) to use the imported belfordAvatar variable:
Change src={filteredData[1]?.avatar || ...} to src={belfordAvatar}
Change src={filteredData[0]?.avatar || ...} to src={belfordAvatar}
Change src={filteredData[2]?.avatar || ...} to src={belfordAvatar}
Modify List Image Rendering: Find the <img> tag inside the .map((user, index) => ...) loop that renders the main list [source: 4477]. Change its src attribute:
Change src={user.avatar} to src={belfordAvatar}
Instruction Set 2: Update competition-tracker.tsx

File: client/src/components/competition-tracker.tsx
Import Image: Add the same import statement as above:
TypeScript

import belfordAvatar from '../assets/belford-avatar.png'; // Adjust path if needed
Modify Avatar Rendering: Find where avatars are displayed for the top 3 and the user position. Replace the <span>{investor.avatar}</span> [source: 2144] and <span>{userPosition.avatar}</span> [source: 2151] elements with proper <img> tags using the imported belfordAvatar. Wrap them in divs for consistent styling:
Inside Top Three Loop: Replace <span className="mr-2">{investor.avatar}</span> [source: 2144] with:
JavaScript

<div className="w-6 h-6 rounded-full overflow-hidden border border-slate-200 flex-shrink-0 mr-2">
   <img src={belfordAvatar} alt={investor.name} className="w-full h-full object-cover" />
</div>
For User Position: Replace <span className="mr-2">{userPosition.avatar}</span> [source: 2151] with:
JavaScript

 <div className="w-8 h-8 rounded-full overflow-hidden border border-slate-200 flex-shrink-0 mr-2">
    <img src={belfordAvatar} alt={userPosition.name} className="w-full h-full object-cover" />
 </div>
(Note: You might need to adjust the w-X h-X classes if you want different sizes).
After these changes, both the leaderboard page and the competition tracker should display the belford-avatar.png image for all users, confirming that the image import and rendering work correctly. The next step would be to fix the data source (@/data/leaderboard-data.ts) to provide valid, resolvable image paths for each user instead of emojis.