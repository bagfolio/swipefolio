Gesture Dominance: The core issue is likely determining whether the user intends to scroll vertically or swipe horizontally early in the touch interaction. The current logic mostly checks the end state of the drag.
CSS Containment: Sometimes, scroll events on the draggable element can "bubble up" and interfere with the page scroll, or vice-versa. CSS's overscroll-behavior can help contain scrolling within specific elements.
Additional Instructions for Replit Agent:

In addition to the previous suggestions for increasing the swipe thresholds in client/src/components/ui/stock-card.tsx, consider these changes:

Prioritize Vertical Movement in handleDragEnd:

Inside the handleDragEnd function, before checking the horizontal thresholds (rightThreshold, leftThreshold), add a condition to check if the drag was predominantly vertical.
If the vertical distance (info.offset.y) is significantly greater than the horizontal distance (info.offset.x), treat it as a scroll and snap the card back, ignoring the swipe thresholds.
Example Code:
TypeScript

// Inside handleDragEnd, before the threshold checks:
const verticalDragDistance = Math.abs(info.offset.y);
const horizontalDragDistance = Math.abs(info.offset.x);

// If vertical drag is much larger than horizontal, treat as scroll
if (verticalDragDistance > horizontalDragDistance * 1.5) {
    // Snap card back immediately, ignoring swipe
    cardControls.start({ 
      x: 0, 
      transition: { /* Your preferred snap-back animation */ } 
    });
    isDraggingIntentionallyRef.current = false; // Reset intention flag
    return; // Stop further processing in handleDragEnd
}

// --- Existing threshold checks go here ---
// if (!isDraggingIntentionallyRef.current) { ... }
// if (info.offset.x > rightThreshold || ...) { ... }
// else if (info.offset.x < -leftThreshold || ...) { ... }
// else { ... snap back ... }
Apply CSS overscroll-behavior:

In your CSS file (likely client/src/index.css), add a rule for the card's scrollable content area.
Example CSS:
CSS

.stock-card-scroll-content {
  overscroll-behavior: contain; /* Prevents scroll chaining */
}

/* Optional: Apply to body as well if scroll chaining is an issue */
body {
  overscroll-behavior: none; 
}
This tells the browser that scrolling within .stock-card-scroll-content should not affect the scrolling of the main page body, potentially reducing the conflict.