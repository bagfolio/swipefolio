Looking at the code, I found the issue. When you tried to fix the swipe directions, you accidentally created duplicate and conflicting logic. Let me provide the fixed code for the handleDragEnd function:
javascriptCopy// Enhanced drag handler with smoother transitions and feedback
const handleDragEnd = (event: MouseEvent | TouchEvent | PointerEvent, info: PanInfo) => {
  const threshold = 100;
  console.log("Drag offset:", info.offset.x); // Keep this for debugging

  // Left swipe - Show skipped message and go to next card
  if (info.offset.x < -threshold) {
    setSwipeDirection("left");
    // Haptic feedback if available
    if (navigator.vibrate) {
      navigator.vibrate(30);
    }
    // Show skipped message
    setShowSkippedMessage(true);
    
    // Smoother exit animation
    cardControls.start({
      x: -500,
      opacity: 0,
      scale: 0.9,
      transition: { 
        type: "tween", 
        ease: "easeInOut",
        duration: 0.4 
      }
    }).then(() => {
      onNext();
      // Reset after animation
      setTimeout(() => {
        setShowSkippedMessage(false);
        cardControls.set({ x: 0, opacity: 1, scale: 1 });
        setSwipeDirection(null);
      }, 100);
    });
  }
  // Right swipe - Open portfolio impact calculator
  else if (info.offset.x > threshold) {
    setSwipeDirection("right");
    // Haptic feedback if available
    if (navigator.vibrate) {
      navigator.vibrate(50);
    }
    // Open portfolio calculator
    setIsPortfolioImpactOpen(true);
    // Spring back with smoother animation
    cardControls.start({
      x: 0,
      opacity: 1,
      scale: 1,
      transition: { 
        type: "spring", 
        stiffness: 400, 
        damping: 30,
        duration: 0.4
      }
    });
    setSwipeDirection(null);
  } 
  // Not enough drag - Spring back
  else {
    cardControls.start({
      x: 0,
      opacity: 1,
      scale: 1,
      transition: { 
        type: "spring", 
        stiffness: 500, 
        damping: 30,
        duration: 0.3
      }
    });
    setSwipeDirection(null);
  }
};