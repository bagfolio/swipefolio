Overview
The Portfolio Impact Calculator will show users how adding a new stock affects their existing portfolio across key financial metrics. This interactive tool allows users to visualize changes before making investment decisions.
Data Sources

Use existing stock metrics from the StockData interface (performance, stability, value, momentum)
Use current portfolio composition (stocks, allocation percentages, total value)

Step-by-Step Calculation Process
1. Initial Setup

When a user swipes right on a stock, capture the stock's metrics
Retrieve the user's current portfolio composition
Set a default allocation of 5% of total portfolio value for the new stock

2. Convert String Values to Numeric Scores

For each metric with string values (like "Strong", "Good", "Fair", "Poor"):

Strong/High = 90
Good = 70
Average/Fair = 50
Weak/Poor/Unstable = 30



3. Calculate Sub-Metric Scores
For each of the four main categories, calculate a weighted score:
Value Score (0-100)

P/E Ratio (50%): Lower is better

Score = 100 - (Stock P/E / Industry Avg P/E) * 50
Cap between 0-100


P/B Ratio (30%): Lower is better

Score = 100 - (Stock P/B / Industry Avg P/B) * 50
Cap between 0-100


Dividend Yield (20%): Higher is better

Score = (Stock Yield / Industry Avg Yield) * 100
Cap between 0-100



Growth Score (0-100)

Revenue Growth (40%): Higher is better

Score = (Stock Growth / Industry Avg Growth) * 100
Cap between 0-100


Profit Margin (30%): Higher is better

Score = (Stock Margin / Industry Avg Margin) * 100
Cap between 0-100


Return on Capital (30%): Higher is better

Score = (Stock ROC / Industry Avg ROC) * 100
Cap between 0-100



Momentum Score (0-100)

3-Month Return (50%): Higher is better

Score = (Stock Return / Industry Avg Return) * 100
Cap between 0-100


Relative Performance (30%): Higher is better

Score = 50 + (Stock Relative Perf * 5)
Cap between 0-100


RSI (20%): Closer to 50 is better

Score = 100 - (Math.abs(50 - Stock RSI) * 2)
Cap between 0-100



Stability Score (0-100)

Volatility (50%): Lower is better

Score = 100 - (Stock Volatility / Industry Avg Volatility) * 50
Cap between 0-100


Beta (30%): Closer to 1 is better

Score = 100 - (Math.abs(1 - Stock Beta) * 50)
Cap between 0-100


Dividend Consistency (20%): Based on string value

"High"/"Good" = 90
"Medium" = 60
"Poor"/"Low" = 30
"N/A" = 0



4. Calculate Current Portfolio Metrics
For each of the four main categories:
javascriptCopylet currentPortfolioScore = 0;
let totalWeight = 0;

portfolio.stocks.forEach(stock => {
  const weight = stock.value / portfolio.totalValue;
  currentPortfolioScore += weight * stock.metricScore;
  totalWeight += weight;
});

// Normalize in case weights don't add up to 1
currentPortfolioScore = currentPortfolioScore / totalWeight;
5. Calculate New Portfolio Metrics
For each of the four main categories:
javascriptCopyconst newStockAllocation = newStock.allocationValue;
const newTotalValue = portfolio.totalValue + newStockAllocation;
const newWeight = newStockAllocation / newTotalValue;
const existingWeight = portfolio.totalValue / newTotalValue;

const newPortfolioScore = (currentPortfolioScore * existingWeight) + 
                          (newStock.metricScore * newWeight);
6. Calculate Impact
For each metric, calculate the difference:
javascriptCopyconst impact = newPortfolioScore - currentPortfolioScore;
Interactive Elements
1. Allocation Slider

Allow users to adjust allocation from 1% to 25% of portfolio value
Recalculate impacts in real-time as slider changes

2. Visual Elements

Show before/after scores for each category
Use directional arrows (↑/↓) to indicate improvement or deterioration
Color-code changes (green for improvement, red for deterioration)
Show percentage change for each category

3. Summary Panel

Overall impact description
Portfolio balance assessment
Suggested optimal allocation (if different from selected)